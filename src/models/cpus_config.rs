/*
 * Cloud Hypervisor API
 *
 * Local HTTP based API for managing and inspecting a cloud-hypervisor virtual machine.
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CpusConfig {
    #[serde(rename = "boot_vcpus")]
    pub boot_vcpus: i32,
    #[serde(rename = "max_vcpus")]
    pub max_vcpus: i32,
    #[serde(rename = "topology", skip_serializing_if = "Option::is_none")]
    pub topology: Option<Box<models::CpuTopology>>,
    #[serde(rename = "kvm_hyperv", skip_serializing_if = "Option::is_none")]
    pub kvm_hyperv: Option<bool>,
    #[serde(rename = "max_phys_bits", skip_serializing_if = "Option::is_none")]
    pub max_phys_bits: Option<i32>,
    #[serde(rename = "affinity", skip_serializing_if = "Option::is_none")]
    pub affinity: Option<Vec<models::CpuAffinity>>,
    #[serde(rename = "features", skip_serializing_if = "Option::is_none")]
    pub features: Option<Box<models::CpuFeatures>>,
}

impl CpusConfig {
    pub fn new(boot_vcpus: i32, max_vcpus: i32) -> CpusConfig {
        CpusConfig {
            boot_vcpus,
            max_vcpus,
            topology: None,
            kvm_hyperv: None,
            max_phys_bits: None,
            affinity: None,
            features: None,
        }
    }
}

