/*
 * Cloud Hypervisor API
 *
 * Local HTTP based API for managing and inspecting a cloud-hypervisor virtual machine.
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CpuTopology {
    #[serde(rename = "threads_per_core", skip_serializing_if = "Option::is_none")]
    pub threads_per_core: Option<i32>,
    #[serde(rename = "cores_per_die", skip_serializing_if = "Option::is_none")]
    pub cores_per_die: Option<i32>,
    #[serde(rename = "dies_per_package", skip_serializing_if = "Option::is_none")]
    pub dies_per_package: Option<i32>,
    #[serde(rename = "packages", skip_serializing_if = "Option::is_none")]
    pub packages: Option<i32>,
}

impl CpuTopology {
    pub fn new() -> CpuTopology {
        CpuTopology {
            threads_per_core: None,
            cores_per_die: None,
            dies_per_package: None,
            packages: None,
        }
    }
}

